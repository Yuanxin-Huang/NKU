ç©ºå†›
#include<stdio.h>
struct R 
{
	double xr;
	double yr;
	double r;
}; struct R ro[100];
int main()
{
	int n, x, y,count=0; double d1,d2;
	scanf("%d", &n);
	scanf("%d %d", &x, &y);
	for (int i = 0; i < n; i++)
	{
		scanf("%lf %lf %lf", &ro[i].xr, &ro[i].yr, &ro[i].r);
	}
	for (int i = 0; i < n; i++)
	{
		d1 = (x - ro[i].xr) * (x - ro[i].xr) + (y - ro[i].yr) * (y - ro[i].yr);
		d2 = ro[i].r * ro[i].r;
		if (d1 <d2 )
		{
			count++;
		}
	}
	printf("%d", count);
	return 0;
}ç©º
æµ·å†›
#include<stdio.h>
int main()
{
	char a[14] = { 0 }; int b[9] = { 0 }, j = 0;
	scanf("%s", a);
	for (int i = 0; i < 12; i++)
	{
		if (a[i] != '-' && a[i] != 'X')
		{
			b[j] = a[i] - '0';
			j++;
		}
		if (a[i] == 'X')
		{
			b[j] = 10;
			j++;
		}
	}
	int c = 0;
	for (int i = 0; i < 9; i++)
	{
		c += b[i] * (i + 1);
	}
	if ((c%11) == (a[12] - '0')||((c%11)==10&&a[12]=='X'))
	{
		printf("OK");
	}
	else
	{
		for (int i = 0; i < 12; i++)
		{
			printf("%c", a[i]);
		}
		if (c % 11 == 10)
			printf("X");
		else
		printf("%d", c % 11);
	}
	return 0;
}æµ·
é™†å†›
#include<stdio.h>
struct mov
{
	int x;
	int y;
	int r;
	int z;
};
struct mov move[100];
int main()
{
	int n, m, so[110][110] = { 0 },sol[110][110]={0};
	scanf("%d %d", &n, &m);
	for (int i = 0; i < m; i++)
	{
		scanf("%d %d %d %d", &move[i].x, &move[i].y, &move[i].r, &move[i].z);
	}
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
		{
			so[i][j] = n * i + j + 1;
			sol[i][j] = n * i + j + 1;
		}
	}
	for (int i = 0; i < m; i++)
	{
		if (move[i].z == 0)
		{
			for (int h = 0; h < (move[i].r); h++)
			{
				for (int j = 0; j < (move[i].r); j++)
				{
					sol[move[i].x - 1 + j][move[i].y + move[i].r - 2 - h] = so[move[i].x - 1 + h][move[i].y - 1 + j];
				}
			}
		}
		if (move[i].z == 1)
		{
			for (int h = 0; h < (move[i].r); h++)
			{
				for (int j = 0; j < (move[i].r); j++)
				{
					sol[move[i].x + move[i].r - 2 - j][move[i].y - 1 + h] = so[move[i].x - 1 + h][move[i].y - 1 + j];
				}
			}
		}
		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < n; j++)
			{
				so[i][j] = sol[i][j];
			}
		}
	}
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < n; j++)
		{
			printf("%d ", sol[i][j]);
		}
		if(i!=n-1)
		printf("\n");
	}
	return 0;
}ðŸ¦Œ
