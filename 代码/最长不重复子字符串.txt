最长不重复子字符串
滑动窗口·
The longest substring of unduplicated characters

total submissions: 27timespassed: 10timespassing rate: 37.04%

memory limit: 104857600(BYTE)time limit: 1000(MS)input limit: 1000(line)output limit: 1000(line)
question description

Given a string s, we want you to find the length of the longest substring that doesn't have a repeating character in it. 

Example: 

    input: S = “ABCABCBB” 

    output: 3 

    explanation: because the longest substring of unduplicated characters is“ABC”, so the output length should be 3.

sample inpput and output
样例1
input:
abcabcbb
output:
3
样例2
input:
bbbbb
output:
1
样例3
input:
pwwkew
output:
3



#define   _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include<string.h> 
int main() {
	char s[100]; int hash[128] = { 0 };
	int  max = 0;
	gets_s(s);
	int n = strlen(s);
	if (n == 0 || n == 1)
		max = n;
	int i, j;
	int begin = 0;
	for (i = 0; s[i] != '\0'; i++) {
		for (j = begin; j < i; j++) {
			if (s[i] == s[j]) {
				begin = j + 1;
				break;
			}
		}
		if (i - begin + 1 > max)
			max = i - begin + 1;
	}
	printf("%d", max);
	return 0;
}