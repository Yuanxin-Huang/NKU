
//士兵
// #define   _CRT_SECURE_NO_WARNINGS 1
//#include<stdio.h>
//void input(int n,int m) {
//	scanf("%d %d",&n,&m);
//	int arr[100][4];
//	for (int i = 0; i < m; i++) {
//		for (int j = 0; j < 4; j++) {
//			scanf("%d",arr[i][j]);
//		}
//	}
//}
//int main() {
//	int n, m;
//	int soldier[150][150];
//	void input(int n,int m);
//	for (int i = 0; i < m; i++) {
//		for (int j = 0; j < 4; j++) {
//			soldier[i][j] = i + 1;
//		}
//	}
//	input(n, m);
//
//}

//#define   _CRT_SECURE_NO_WARNINGS 1
//#include <stdio.h>
//int main() {
//	char arr[10000] = {0};
//	int count = 0, max = 1,k=0;
//	gets_s(arr);
//	int i = 0, j = 0;
//	for (i = 0; arr[i] != '\0'; i++) {
//		if(arr[i] != ' ')
//			count++;
//		else if (arr[i] = ' ')
//			count = 0;
//		if (count > max) {
//			max = count;
//			k = i;
//		}
//	}
//	for (j = k - max+1; j <= k; j++) {
//		printf("%c",arr[j]);
//	}
//	return 0;
//}
//#define   _CRT_SECURE_NO_WARNINGS 1
//#include<stdio.h>
//int Min(int a, int b) {
//	return a > b ? b : a;
//}
//int Max(int a, int b) {
//	return a > b ? b : a;
//}
//int main() {
//	int n,tmp[100];
//	int a[100];
//	scanf("%d",&n);
//	for (int i = 0; i < n; i++){
//		scanf("%d",&a[i]);
//	}
//	int sum = 0;
//	for (int i = 0; i < n; i++) {
//		for (int j = i+1; j < n; j++) {
//			sum = Min(a[i], a[i+1]) + sum ;
//		}
//	}
//	int max = 0;
//	for (int i = 0; i < n; i++) {
//		tmp[i] = sum;
//	}
//	printf("%d",max);
//	return 0;
//}
/*#define   _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include<string.h>
int main() {
	int n, k;
	int i = 0, j = 0;
	scanf("%d %d\n", &n, &k);
	char a[100][100];
	for (i = 0; i < n; i++)
	{
		while (a[i][j] != '\n') {
			scanf("%s", &a[i][j]);
			j++;
			if (j > n)
				break;
		}
	}
	char b[1000][1000];

	for (int i = 0; i < n * k; i++) {
		for (int j = 0; j < n * k; j++) {
			printf("%c ", b[i][j]);
		}
		printf("\n");
	}
	return 0;
}*/
/*#define   _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include<string.h>
int min(int a, int b) {
	return a < b ? a : b;
}
int f[202][202];
char s1[202], s2[202];
int i, j, k, m, n;
int main() {
	scanf("%s%s", s1, s2);
	m = strlen(s1);
	n = strlen(s2);
	for (i = 1; i <= m; i++) {
		f[i][0] = i;
	}
	//到i位置为止把字符串A的内容全部删除
	for (i = 1; i <= n; i++) {
		f[0][i] = i;
	}
	//在开头给字符串A添上和B到i位置相同的字符
	for (i = 1; i <= m; i++) {
		for (j = 1; j <= n; j++) {
			if (s1[i - 1] == s2[j - 1]) {
				f[i][j] = f[i - 1][j - 1];
			}
			else {
				f[i][j] = min(min(f[i - 1][j], f[i][j - 1]), f[i - 1][j - 1]) + 1;
			}
		}
	}
	printf("%d\n", f[m][n]);
	return 0;
}*/
//#define   _CRT_SECURE_NO_WARNINGS 1
//#include <stdio.h>
//#include<string.h> 
//int Max(int a, int b) {
//	return (a>b?a:b);
//}
//int main() {
//	int n,a[100];
//	scanf("%d",&n);
////	for (int i = 0; i < n; i++) {
////		scanf("%d",&a[i]);
////	}
////	int sum = 0;
////
////}
//#define   _CRT_SECURE_NO_WARNINGS 1
//#include <stdio.h>
//#include<string.h> 
//int Max(int a, int b) {
//	return a > b ? a : b;
//}
//int main() {
//	int n;
//	scanf("%d",&n);
//	int i, j;
//	for (i = 1; i < n; i++) {
//
//	}
//}
#define _CRT_SECURE_NO_WARNINGS 1
#include<stdio.h>
//#include<stdlib.h>
//int miner(const void* a, const void* b)//比较大小
//{
//	return(*(int*)a - *(int*)b);
//}
//int ma(int* nums, int Size)
//{
//	qsort(nums, Size, sizeof(int), miner);//排序
//	int sum = 0;
//	for (int i = 0; i < Size; i += 2)
//	{
//		sum += nums[i];//求和
//	}
//	return sum;
//}
//int main()
//{
//	int n, sum = 0;
//	scanf("%d", &n);
//	int* b = (int*)malloc(n * sizeof(int));
//	for (int i = 0; i < n; i++)
//	{
//		scanf("%d", &b[i]);
//	}
//	int c = ma(b, n);
//	printf("%d", c);
//	free(b);
//	return 0;
//}
//#define _CRT_SECURE_NO_WARNINGS 1
//#include<stdio.h>
//#include<string.h>
//int  positive(int a) {
//	if (a < 0) {
//		a = -a;
//	}
//	else {
//		a = a;
//	}
//	return a;
//}
//int main() {
//	long long neededApples, count = 0;
//	long i, j, n = 1, l;
//	scanf("%d",&neededApples);
//	int  positive(int a);
//	while(count<neededApples){
//		count = 0;
//		for (i = -n; i <= n;i++) {
//			for (j = -n; j <= n; j++) {
//				count = count + positive(i) + positive(j);
//			}
//		}
//		n++;
//	} 
//	l = 2 * n * 4;
//	printf("%d",l);
//	return 0;
//}